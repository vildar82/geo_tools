(defun convert-profile-dat-to-xml ( / patch-dat patch-xml
				   list-dat n profile-properties result-list-main result-list-profile templete-profile-name templete-profile-string templete-properties
				   result-list-str result-list-string-in-basement)
  (setq list-dat(profile-get-sorting-list-profile-dat))
  (setq templete-profile-name (list "profile-name" "STR"))
  (setq templete-properties
	 (list
	   (list "draw-ruler" "INT")
	   (list "text-style" "STR")
	   (list "h-title-text" "REAL")
	   (list "buffer-dist" "REAL")
	   (list "width-basement" "REAL")
	   (list "basement-str-reference-level" "STR")
	   (list "basement-str-horizontal-scale" "STR")
	   (list "basement-str-vertical-scale" "STR")
	   (list "basement-str-title" "STR")
	   (list "h-intersection-text" "REAL")
	   (list "accuracy-mleader" "INT")
	   )
	)
  (setq templete-profile-string
	 (list
	   (list "name-str" "STR")
	   (list "code-str" "STR")
	   (list "h-str" "REAL")
	   (list "sel-units-downgrade" "INT")
	   (list "accuracy-text" "INT")
	   (list "accuracy-downgrade" "INT")
	   (list "h-text" "REAL")
	   (list "draw-circle" "INT")
	   (list "min-angle" "REAL")
	   )
	)
  (foreach x list-dat
    (setq result-list-profile (list (list (car templete-profile-name)(car x))))
    (setq n 0)
    (repeat (length (setq profile-properties(cadr x)))
      (setq result-list-profile(append result-list-profile (list (list (car(nth n templete-properties))
								       (convert-str-be-type(nth n profile-properties)
									 (cadr(nth n templete-properties)))))))
      (setq n (1+ n))
      )
    (setq result-list-string-in-basement(list "list-string-in-basement"))
    (foreach y (cddr x)
      (setq n 0)
      (setq result-list-str nil)
      (repeat (length y)
	(if (not (=(nth n y)"-"))
	  (setq result-list-str(append result-list-str (list (list (car(nth n templete-profile-string))
								   (convert-str-be-type(nth n y)
								     (cadr(nth n templete-profile-string)))))))
	  )
	(setq n (1+ n))
	)
      (setq result-list-string-in-basement(append result-list-string-in-basement (list result-list-str)))
      )
    (setq result-list-profile (append result-list-profile(list result-list-string-in-basement)))
    (setq result-list-main (append result-list-main (list result-list-profile)))
    )
  (princ result-list-main)
;;;  (file_xml_write_be_list (strcat *geo_tools_user_dat_dir* "\\data\\basement-in-profile.xml") result-list-main)
  )